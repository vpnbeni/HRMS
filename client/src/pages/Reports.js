import React, { useState, useRef } from 'react';
import '../styles/Reports.css';

const STATUS_OPTIONS = [
  { value: 'generated', label: 'Generated', color: '#4caf50' },
  { value: 'pending', label: 'Pending', color: '#ffb300' }
];

const mockReports = [
  {
    _id: '1',
    reportName: 'Monthly Attendance Report',
    department: 'HR',
    generatedBy: 'Jane Cooper',
    date: '2023-10-01',
    status: 'generated'
  },
  {
    _id: '2',
    reportName: 'Payroll Summary',
    department: 'Finance',
    generatedBy: 'Cody Fisher',
    date: '2023-10-02',
    status: 'pending'
  }
];

const Reports = () => {
  const [reports, setReports] = useState(mockReports);
  const [showForm, setShowForm] = useState(false);
  const [editId, setEditId] = useState(null);
  const [formData, setFormData] = useState({
    reportName: '',
    department: '',
    generatedBy: '',
    date: new Date().toISOString().split('T')[0],
    status: 'pending'
  });
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('');
  const [actionMenuOpen, setActionMenuOpen] = useState(null);
  const [statusDropdownOpen, setStatusDropdownOpen] = useState(null);
  const formRef = useRef();

  const filteredReports = reports.filter(report => {
    const matchesSearch = report.reportName.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = !statusFilter || report.status === statusFilter;
    return matchesSearch && matchesStatus;
  });

  const isFormValid = () => {
    return (
      formData.reportName &&
      formData.department &&
      formData.generatedBy &&
      formData.date
    );
  };

  return (
    <div className="reports-page">
      <div className="reports-controls">
        <select
          className="filter-dropdown"
          value={statusFilter}
          onChange={e => setStatusFilter(e.target.value)}
        >
          <option value="">Status</option>
          {STATUS_OPTIONS.map(opt => (
            <option key={opt.value} value={opt.value}>{opt.label}</option>
          ))}
        </select>
        <input
          className="search-bar"
          type="text"
          placeholder="Search"
          value={searchTerm}
          onChange={e => setSearchTerm(e.target.value)}
        />
        <button className="generate-report-btn" onClick={() => { setShowForm(true); setEditId(null); }}>
          Generate Report
        </button>
      </div>
      <div className="reports-table-container">
        <table className="reports-table">
          <thead>
            <tr>
              <th>Report Name</th>
              <th>Department</th>
              <th>Generated By</th>
              <th>Date</th>
              <th>Status</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {filteredReports.length === 0 ? (
              <tr><td colSpan={6} style={{ textAlign: 'center' }}>No reports found.</td></tr>
            ) : (
              filteredReports.map((report) => (
                <tr key={report._id}>
                  <td>{report.reportName}</td>
                  <td>{report.department}</td>
                  <td>{report.generatedBy}</td>
                  <td>{report.date}</td>
                  <td>
                    <div className="status-pill-dropdown">
                      <button
                        className={`status-pill status-${report.status}`}
                        style={{ borderColor: STATUS_OPTIONS.find(opt => opt.value === report.status)?.color }}
                        onClick={e => {
                          e.stopPropagation();
                          setStatusDropdownOpen(report._id === statusDropdownOpen ? null : report._id);
                        }}
                      >
                        {STATUS_OPTIONS.find(opt => opt.value === report.status)?.label || report.status}
                        <span className="dropdown-arrow">▼</span>
                      </button>
                      {statusDropdownOpen === report._id && (
                        <div className="status-dropdown-menu">
                          {STATUS_OPTIONS.map(opt => (
                            <div
                              key={opt.value}
                              className="status-dropdown-item"
                              onClick={() => {
                                // handleStatusUpdate(report._id, opt.value);
                                setStatusDropdownOpen(null);
                              }}
                            >
                              {opt.label}
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </td>
                  <td>
                    <div className="action-menu-container">
                      <button
                        className="action-menu-btn"
                        onClick={e => {
                          e.stopPropagation();
                          setActionMenuOpen(report._id === actionMenuOpen ? null : report._id);
                        }}
                      >
                        <span className="dot"></span>
                        <span className="dot"></span>
                        <span className="dot"></span>
                      </button>
                      {actionMenuOpen === report._id && (
                        <div className="action-dropdown-menu">
                          <div className="action-dropdown-item">View</div>
                          <div className="action-dropdown-item">Download</div>
                          <div className="action-dropdown-item delete">Delete</div>
                        </div>
                      )}
                    </div>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
      {showForm && (
        <div className="modal-overlay">
          <div className="modal-container" ref={formRef}>
            <div className="modal-header">
              <span>{editId ? 'Edit Report' : 'Generate Report'}</span>
              <button className="modal-close" onClick={() => { setShowForm(false); setEditId(null); }}>×</button>
            </div>
            <form className="modal-form">
              <div className="modal-form-row">
                <div className="modal-form-group">
                  <label>Report Name<span>*</span></label>
                  <input
                    type="text"
                    name="reportName"
                    placeholder="Report Name"
                    value={formData.reportName}
                    onChange={e => setFormData({ ...formData, reportName: e.target.value })}
                    required
                  />
                </div>
                <div className="modal-form-group">
                  <label>Department<span>*</span></label>
                  <input
                    type="text"
                    name="department"
                    placeholder="Department"
                    value={formData.department}
                    onChange={e => setFormData({ ...formData, department: e.target.value })}
                    required
                  />
                </div>
              </div>
              <div className="modal-form-row">
                <div className="modal-form-group">
                  <label>Generated By<span>*</span></label>
                  <input
                    type="text"
                    name="generatedBy"
                    placeholder="Generated By"
                    value={formData.generatedBy}
                    onChange={e => setFormData({ ...formData, generatedBy: e.target.value })}
                    required
                  />
                </div>
                <div className="modal-form-group">
                  <label>Date<span>*</span></label>
                  <input
                    type="date"
                    name="date"
                    value={formData.date}
                    onChange={e => setFormData({ ...formData, date: e.target.value })}
                    required
                  />
                </div>
              </div>
              <button
                type="submit"
                className="modal-save-btn"
                disabled={!isFormValid()}
              >
                Save
              </button>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default Reports; 